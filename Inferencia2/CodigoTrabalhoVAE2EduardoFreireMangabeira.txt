# Eduardo Freire Mangabeira
# 202010111-40

set.seed(202010111)

# Q1

# b)
exibe_resultado_do_teste <- function(teste, alpha){
    if(teste==1){
        cat("O valor calculado para a estatística de teste cai na região de rejeição,
              logo, ao nível de significância ",{alpha}," existem evidências 
              para rejeitar Ho. Portanto descartamos a hipótese de que p1 = p2")
    }else{
        cat("O valor calculado para a estatística de teste NÃO cai na região de rejeição,
              logo, ao nível de significância ",{alpha}," não existem evidências 
              para rejeitar Ho. Portanto não descartamos a hipótese de que p1 = p2")
    }
    
    
}


teste_comparacao_proporcoes_bilateral <- function(x1, x2, n1, n2, alpha){
    p1 <- x1/n1
    p2 <- x2/n2
    p_barra = (x1+x2)/(n1+n2)
    zo = -(p1 - p2) / sqrt(p_barra*(1-p_barra)*((1/n1) + (1/n2)))
    quantil_alpha = round(qnorm(alpha/2), 3)
    if(zo > (-1)*quantil_alpha | zo < quantil_alpha){
        return(1)
    }
    return(0)
}

n1 <- 200
n2 <- 300
x1 <- rbinom(1, n1, 0.2) 
x2 <- rbinom(1, n2, 0.2)
alpha <- 0.05
teste <- teste_comparacao_proporcoes_bilateral(x1, x2, n1, n1, alpha)
exibe_resultado_do_teste(teste, alpha)

# c)


conta_rejeicoes_teste_comparacao <- function(
    repeticoes, 
    significancia, 
    parametros_1,
    parametros_2)
{
    rejeicoes <- 0
    n1 <- parametros_1[[1]]
    prob1 <- parametros_1[[2]]
    n2 <- parametros_2[[1]]
    prob2 <- parametros_2[[2]]
    
    for(i in c(1:repeticoes)){
        x1 <- rbinom(1, n1, prob1) 
        x2 <- rbinom(1, n2, prob2)
        nova_rejeicao <- teste_comparacao_proporcoes_bilateral(
            x1, x2, n1, n2, significancia
        )
        rejeicoes <- rejeicoes + nova_rejeicao
    }
    return(rejeicoes) 
}

parametros_binomial_1 <- list(200, 0.2)
parametros_binomial_2 <- list(300, 0.2)
conta_rejeicoes_teste_comparacao(100, 0.05, parametros_binomial_1, parametros_binomial_2)

# O número de rejeições foi igual a 4.
# Como esperamos que, ao nível de 95%, de 100 procedimentos 
# no máximo 5 sejam rejeitados, o valor é bem próximo do que se espera.
# Para um nível de significância mais baixo, o resultado poderia não ser o mesmo.


# Q2
n <- 100
log_normal <- rlnorm(n)
k = 10
LI <- 0.1
LS <- 1
h <- 0.1
lambda <- 2
p_quantis <- seq(LI, LS, h)
observacoes <- c()

for(p_quantil in p_quantis){
    if(p_quantil == LI){
        observacoes <- c(observacoes, sum(log_normal<=qexp(p_quantil, lambda)))
        
    }else{
        if(p_quantil == LS){
            observacoes <- c(observacoes,sum(log_normal>=qexp(LS, lambda)))
    }else{
        observacoes <- c(observacoes,
        sum(log_normal<=qexp(p_quantil, lambda) & log_normal>=qexp(p_quantil-LI, lambda))
        )
        }
    }
}
    
observacoes
Q_observado <- 0
for(observacao in observacoes){
    Q_observado <- Q_observado + ((observacao - k)^2)/k
}

cat("Q_observado = ", Q_observado)


print("A 1% de nível de significância:")
cat("Valor crítico da Qui-quadrado com 9 graus de liberdade = ", qchisq(0.99,9))

# A estatística observada é maior do que o valor crítico. Há evidências para 
# rejeitar Ho ao nível de significância de 1%, ou seja, a distribuição 
# Exp(2) não se ajusta bem à amostra obtida da lognormal.

